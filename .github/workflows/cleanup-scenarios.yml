name: Cleanup Screenshot Scenarios

on:
  push:
    branches: [ main ]
    paths:
      - '**'
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to clean up scenarios for'
        required: true
        type: number

jobs:
  cleanup:
    name: Remove merged PR screenshot scenarios
    runs-on: ubuntu-latest

    # Skip if this is itself a cleanup commit
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    permissions:
      contents: write  # Needed to push cleanup commit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need at least 2 commits to see merge commit
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Detect merged PR number
        id: detect_pr
        run: |
          # Check if manual workflow dispatch
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
            echo "Manual workflow dispatch for PR #$PR_NUMBER"
          else
            # Extract PR number from merge commit message
            # Formats supported:
            # - "Merge pull request #123 from ..."
            # - "feat: something (#123)"
            COMMIT_MSG="${{ github.event.head_commit.message }}"

            # Try standard merge format first
            PR_NUMBER=$(echo "$COMMIT_MSG" | grep -oP 'Merge pull request #\K\d+' | head -1)

            # Try squash merge format if standard didn't work
            if [ -z "$PR_NUMBER" ]; then
              PR_NUMBER=$(echo "$COMMIT_MSG" | grep -oP '\(#\K\d+\)' | tr -d ')' | head -1)
            fi

            if [ -z "$PR_NUMBER" ]; then
              echo "⏭️ No PR number found in commit message, skipping cleanup"
              echo "Commit message: $COMMIT_MSG"
              echo "found=false" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi

          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "found=true" >> $GITHUB_OUTPUT
          echo "🔍 Detected PR number: #$PR_NUMBER"

      - name: Remove scenarios for merged PR
        id: cleanup
        if: steps.detect_pr.outputs.found == 'true'
        run: |
          PR_NUMBER="${{ steps.detect_pr.outputs.pr_number }}"
          SCENARIOS_FILE="screenshot-scenarios.json"

          if [ ! -f "$SCENARIOS_FILE" ]; then
            echo "⏭️ $SCENARIOS_FILE not found, skipping cleanup"
            echo "changed=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "📋 Current scenarios in file:"
          node -e "
            const fs = require('fs');
            const data = JSON.parse(fs.readFileSync('$SCENARIOS_FILE', 'utf8'));
            const prScenarios = Object.keys(data.scenarios).filter(k => k.startsWith('pr-$PR_NUMBER-'));
            console.log('Scenarios to remove:', prScenarios.length);
            prScenarios.forEach(s => console.log('  -', s));
          "

          # Remove scenarios matching pr-{number}-*
          node -e "
            const fs = require('fs');
            const data = JSON.parse(fs.readFileSync('$SCENARIOS_FILE', 'utf8'));
            const prPrefix = 'pr-$PR_NUMBER-';
            const before = Object.keys(data.scenarios).length;

            // Filter out scenarios for this PR
            const filtered = Object.keys(data.scenarios).reduce((acc, key) => {
              if (!key.startsWith(prPrefix)) {
                acc[key] = data.scenarios[key];
              }
              return acc;
            }, {});

            const after = Object.keys(filtered).length;
            const removed = before - after;

            if (removed > 0) {
              data.scenarios = filtered;
              fs.writeFileSync('$SCENARIOS_FILE', JSON.stringify(data, null, 2) + '\n');
              console.log('✅ Removed', removed, 'scenario(s) for PR #$PR_NUMBER');
              process.exit(0);
            } else {
              console.log('⏭️ No scenarios found for PR #$PR_NUMBER');
              process.exit(1);
            }
          "

          if [ $? -eq 0 ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit cleanup changes
        if: steps.cleanup.outputs.changed == 'true'
        run: |
          PR_NUMBER="${{ steps.detect_pr.outputs.pr_number }}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add screenshot-scenarios.json
          git commit -m "chore: remove screenshot scenarios for PR #$PR_NUMBER [skip ci]

Automatic cleanup after PR merge to reduce CI noise."

          git push

          echo "✅ Cleanup commit pushed"

      - name: Add summary
        if: always()
        run: |
          echo "## Screenshot Scenarios Cleanup 🧹" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.detect_pr.outputs.found }}" != "true" ]; then
            echo "⏭️ **No PR number detected** - skipped cleanup" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "This is normal for direct commits to main." >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.cleanup.outputs.changed }}" = "true" ]; then
            PR_NUMBER="${{ steps.detect_pr.outputs.pr_number }}"
            echo "✅ **Removed scenarios for PR #$PR_NUMBER**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Screenshot scenarios matching \`pr-$PR_NUMBER-*\` have been removed from the repository." >> $GITHUB_STEP_SUMMARY
          else
            PR_NUMBER="${{ steps.detect_pr.outputs.pr_number }}"
            echo "ℹ️ **No scenarios found for PR #$PR_NUMBER**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Either no scenarios existed for this PR, or they were already cleaned up." >> $GITHUB_STEP_SUMMARY
          fi
